// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplateruleengine = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/o/cluster/rules": {
            "get": {
                "description": "Returns all the rules for RuleEngine processing",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rule engine"
                ],
                "summary": "Get all rules",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ZkHttpResponse-model_FilterRule"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.FilterRule": {
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string"
                },
                "zk_request_type": {
                    "$ref": "#/definitions/model.Rule"
                }
            }
        },
        "model.Rule": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "input": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "utils.ZkHttpError": {
            "type": "object",
            "properties": {
                "info": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "kind": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "param": {
                    "type": "string"
                },
                "stack": {}
            }
        },
        "utils.ZkHttpResponse-model_FilterRule": {
            "type": "object",
            "properties": {
                "debug": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "error": {
                    "$ref": "#/definitions/utils.ZkHttpError"
                },
                "message": {
                    "type": "string"
                },
                "payload": {
                    "$ref": "#/definitions/model.FilterRule"
                }
            }
        }
    }
}`

// SwaggerInforuleengine holds exported Swagger Info so clients can modify it
var SwaggerInforuleengine = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "ruleengine",
	SwaggerTemplate:  docTemplateruleengine,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInforuleengine.InstanceName(), SwaggerInforuleengine)
}
